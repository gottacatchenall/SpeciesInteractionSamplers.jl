import{_ as e,c as a,o as t,a6 as s}from"./chunks/framework.OLzPTGuc.js";const b=JSON.parse('{"title":"Internal API","description":"","frontmatter":{},"headers":[],"relativePath":"reference/internal.md","filePath":"reference/internal.md","lastUpdated":null}'),i={name:"reference/internal.md"},l=s('<h1 id="Internal-API" tabindex="-1">Internal API <a class="header-anchor" href="#Internal-API" aria-label="Permalink to &quot;Internal API {#Internal-API}&quot;">​</a></h1><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.map-Union{Tuple{SC}, Tuple{ST}, Tuple{Any, Network{ST, SC}}} where {ST, SC&lt;:(Union{var&quot;#s20&quot;, var&quot;#s56&quot;, var&quot;#s57&quot;} where {var&quot;#s20&quot;&lt;:Spatial, var&quot;#s56&quot;&lt;:Temporal, var&quot;#s57&quot;&lt;:Spatiotemporal})}" href="#Base.map-Union{Tuple{SC}, Tuple{ST}, Tuple{Any, Network{ST, SC}}} where {ST, SC&lt;:(Union{var&quot;#s20&quot;, var&quot;#s56&quot;, var&quot;#s57&quot;} where {var&quot;#s20&quot;&lt;:Spatial, var&quot;#s56&quot;&lt;:Temporal, var&quot;#s57&quot;&lt;:Spatiotemporal})}">#</a> <b><u>Base.map</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fcn, net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network{ST,SC}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {ST,SC}</span></span></code></pre></div><p>foo</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/1f722aaa53552ae0066b8d98a55b83102fb3b4b1/src/map.jl#L10-L14" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.map-Union{Tuple{ST}, Tuple{Any, Network{ST, &lt;:Global}}} where ST" href="#Base.map-Union{Tuple{ST}, Tuple{Any, Network{ST, &lt;:Global}}} where ST">#</a> <b><u>Base.map</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fcn, net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network{ST,&lt;:Global}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {ST}</span></span></code></pre></div><p>Applies the function <code>fcn</code> to the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Global"><code>Global</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Network"><code>Network</code></a> <code>net</code>. Overload of the <code>map</code> method for <code>Global</code> networks.</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/1f722aaa53552ae0066b8d98a55b83102fb3b4b1/src/map.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br>',5),r=[l];function n(o,p,h,d,c,k){return t(),a("div",null,r)}const S=e(i,[["render",n]]);export{b as __pageData,S as default};
