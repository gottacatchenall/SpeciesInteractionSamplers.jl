import{_ as e,c as a,o as i,a6 as s}from"./chunks/framework.DV0yOlkA.js";const m=JSON.parse('{"title":"Internal API","description":"","frontmatter":{},"headers":[],"relativePath":"reference/internal.md","filePath":"reference/internal.md","lastUpdated":null}'),t={name:"reference/internal.md"},r=s('<h1 id="Internal-API" tabindex="-1">Internal API <a class="header-anchor" href="#Internal-API" aria-label="Permalink to &quot;Internal API {#Internal-API}&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#SpeciesInteractionSamplers.Abundance"><code>SpeciesInteractionSamplers.Abundance</code></a></li><li><a href="#SpeciesInteractionSamplers.AbundanceGenerator"><code>SpeciesInteractionSamplers.AbundanceGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.DetectionModel"><code>SpeciesInteractionSamplers.DetectionModel</code></a></li><li><a href="#SpeciesInteractionSamplers.GenerationModel"><code>SpeciesInteractionSamplers.GenerationModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Network"><code>SpeciesInteractionSamplers.Network</code></a></li><li><a href="#SpeciesInteractionSamplers.NetworkGenerator"><code>SpeciesInteractionSamplers.NetworkGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.NicheModel"><code>SpeciesInteractionSamplers.NicheModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Occurrence"><code>SpeciesInteractionSamplers.Occurrence</code></a></li><li><a href="#SpeciesInteractionSamplers.PhenologyGenerator"><code>SpeciesInteractionSamplers.PhenologyGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.RangeGenerator"><code>SpeciesInteractionSamplers.RangeGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.RealizationModel"><code>SpeciesInteractionSamplers.RealizationModel</code></a></li><li><a href="#SpeciesInteractionSamplers.RelativeAbundance"><code>SpeciesInteractionSamplers.RelativeAbundance</code></a></li><li><a href="#SpeciesInteractionSamplers.RelativeAbundanceScaled"><code>SpeciesInteractionSamplers.RelativeAbundanceScaled</code></a></li><li><a href="#SpeciesInteractionSamplers.Scale"><code>SpeciesInteractionSamplers.Scale</code></a></li><li><a href="#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesInteractionSamplers.SpeciesPool</code></a></li><li><a href="#SpeciesInteractionSamplers.State"><code>SpeciesInteractionSamplers.State</code></a></li><li><a href="#SpeciesInteractionSamplers.StochasticBlockModel"><code>SpeciesInteractionSamplers.StochasticBlockModel</code></a></li><li><a href="#SpeciesInteractionSamplers.StochasticBlockModel-Tuple{}"><code>SpeciesInteractionSamplers.StochasticBlockModel</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Tuple{NicheModel}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Tuple{StochasticBlockModel}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Union{Tuple{PG}, Tuple{RG}, Tuple{I}, Tuple{Union{RG, PG}, I}} where {I&lt;:Integer, RG&lt;:RangeGenerator, PG&lt;:PhenologyGenerator}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.mirror-Tuple{SpeciesInteractionNetworks.SpeciesInteractionNetwork}"><code>SpeciesInteractionSamplers.mirror</code></a></li><li><a href="#SpeciesInteractionSamplers.numspecies-Tuple{N} where N&lt;:Network"><code>SpeciesInteractionSamplers.numspecies</code></a></li><li><a href="#SpeciesInteractionSamplers.numspecies-Tuple{SpeciesPool}"><code>SpeciesInteractionSamplers.numspecies</code></a></li><li><a href="#SpeciesInteractionSamplers.richness-Tuple{N} where N&lt;:Network"><code>SpeciesInteractionSamplers.richness</code></a></li><li><a href="#SpeciesInteractionSamplers.scale-Tuple{Network}"><code>SpeciesInteractionSamplers.scale</code></a></li><li><a href="#SpeciesInteractionSamplers.species-Tuple{N} where N&lt;:Network"><code>SpeciesInteractionSamplers.species</code></a></li></ul><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.map-Union{Tuple{SC}, Tuple{ST}, Tuple{Any, Network{ST, SC}}} where {ST, SC}" href="#Base.map-Union{Tuple{SC}, Tuple{ST}, Tuple{Any, Network{ST, SC}}} where {ST, SC}">#</a> <b><u>Base.map</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fcn, net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network{ST,SC}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {ST,SC}</span></span></code></pre></div><p>foo</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.map-Union{Tuple{ST}, Tuple{Any, Network{ST, &lt;:Global}}} where ST" href="#Base.map-Union{Tuple{ST}, Tuple{Any, Network{ST, &lt;:Global}}} where ST">#</a> <b><u>Base.map</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fcn, net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network{ST,&lt;:Global}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {ST}</span></span></code></pre></div><p>Applies the function <code>fcn</code> to the <a href="./@ref"><code>Global</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Network"><code>Network</code></a> <code>net</code>. Overload of the <code>map</code> method for <code>Global</code> networks.</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="SpeciesInteractionSamplers.richness-Tuple{N} where N&lt;:Network" href="#SpeciesInteractionSamplers.richness-Tuple{N} where N&lt;:Network">#</a> <b><u>SpeciesInteractionSamplers.richness</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">richness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the number of species in the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a> associated with the input <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Network"><code>Network</code></a> <code>net</code>.</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="SpeciesInteractionSamplers.scale-Tuple{Network}" href="#SpeciesInteractionSamplers.scale-Tuple{Network}">#</a> <b><u>SpeciesInteractionSamplers.scale</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the network partitioned at the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Scale"><code>Scale</code></a> it is defined at.</p><p><a href="https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl" target="_blank" rel="noreferrer">source</a></p></div><br>',12),n=[r];function l(c,o,p,d,h,S){return i(),a("div",null,n)}const u=e(t,[["render",l]]);export{m as __pageData,u as default};
