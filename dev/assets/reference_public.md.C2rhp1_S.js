import{_ as r,C as p,c as o,o as c,aA as i,j as s,G as t,a as l,w as n}from"./chunks/framework.CxhdQmYc.js";const he=JSON.parse('{"title":"Public API","description":"","frontmatter":{},"headers":[],"relativePath":"reference/public.md","filePath":"reference/public.md","lastUpdated":null}'),d={name:"reference/public.md"},h={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ee={class:"jldocstring custom-block",open:""},se={class:"jldocstring custom-block",open:""},ae={class:"jldocstring custom-block",open:""},te={class:"jldocstring custom-block",open:""},ie={class:"jldocstring custom-block",open:""};function le(ne,e,re,pe,oe,ce){const a=p("Badge");return c(),o("div",null,[e[188]||(e[188]=i('<h1 id="Public-API" tabindex="-1">Public API <a class="header-anchor" href="#Public-API" aria-label="Permalink to &quot;Public API {#Public-API}&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#SpeciesInteractionSamplers.Abundance"><code>SpeciesInteractionSamplers.Abundance</code></a></li><li><a href="#SpeciesInteractionSamplers.AbundanceGenerator"><code>SpeciesInteractionSamplers.AbundanceGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.AutocorrelatedRange"><code>SpeciesInteractionSamplers.AutocorrelatedRange</code></a></li><li><a href="#SpeciesInteractionSamplers.Detectable"><code>SpeciesInteractionSamplers.Detectable</code></a></li><li><a href="#SpeciesInteractionSamplers.Detected"><code>SpeciesInteractionSamplers.Detected</code></a></li><li><a href="#SpeciesInteractionSamplers.DetectionModel"><code>SpeciesInteractionSamplers.DetectionModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Feasible"><code>SpeciesInteractionSamplers.Feasible</code></a></li><li><a href="#SpeciesInteractionSamplers.GenerationModel"><code>SpeciesInteractionSamplers.GenerationModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Global"><code>SpeciesInteractionSamplers.Global</code></a></li><li><a href="#SpeciesInteractionSamplers.Metaweb"><code>SpeciesInteractionSamplers.Metaweb</code></a></li><li><a href="#SpeciesInteractionSamplers.MetawebGenerator"><code>SpeciesInteractionSamplers.MetawebGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.NicheModel"><code>SpeciesInteractionSamplers.NicheModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Phenology"><code>SpeciesInteractionSamplers.Phenology</code></a></li><li><a href="#SpeciesInteractionSamplers.PhenologyGenerator"><code>SpeciesInteractionSamplers.PhenologyGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.PoissonPhenology"><code>SpeciesInteractionSamplers.PoissonPhenology</code></a></li><li><a href="#SpeciesInteractionSamplers.Possible"><code>SpeciesInteractionSamplers.Possible</code></a></li><li><a href="#SpeciesInteractionSamplers.Range"><code>SpeciesInteractionSamplers.Range</code></a></li><li><a href="#SpeciesInteractionSamplers.RangeGenerator"><code>SpeciesInteractionSamplers.RangeGenerator</code></a></li><li><a href="#SpeciesInteractionSamplers.Realizable"><code>SpeciesInteractionSamplers.Realizable</code></a></li><li><a href="#SpeciesInteractionSamplers.RealizationModel"><code>SpeciesInteractionSamplers.RealizationModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Realized"><code>SpeciesInteractionSamplers.Realized</code></a></li><li><a href="#SpeciesInteractionSamplers.RelativeAbundance"><code>SpeciesInteractionSamplers.RelativeAbundance</code></a></li><li><a href="#SpeciesInteractionSamplers.RelativeAbundanceScaled"><code>SpeciesInteractionSamplers.RelativeAbundanceScaled</code></a></li><li><a href="#SpeciesInteractionSamplers.Scale"><code>SpeciesInteractionSamplers.Scale</code></a></li><li><a href="#SpeciesInteractionSamplers.Spatial"><code>SpeciesInteractionSamplers.Spatial</code></a></li><li><a href="#SpeciesInteractionSamplers.Spatiotemporal"><code>SpeciesInteractionSamplers.Spatiotemporal</code></a></li><li><a href="#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesInteractionSamplers.SpeciesPool</code></a></li><li><a href="#SpeciesInteractionSamplers.State"><code>SpeciesInteractionSamplers.State</code></a></li><li><a href="#SpeciesInteractionSamplers.StochasticBlockModel-Tuple{}"><code>SpeciesInteractionSamplers.StochasticBlockModel</code></a></li><li><a href="#SpeciesInteractionSamplers.StochasticBlockModel"><code>SpeciesInteractionSamplers.StochasticBlockModel</code></a></li><li><a href="#SpeciesInteractionSamplers.Temporal"><code>SpeciesInteractionSamplers.Temporal</code></a></li><li><a href="#SpeciesInteractionSamplers.UniformPhenology"><code>SpeciesInteractionSamplers.UniformPhenology</code></a></li><li><a href="#SpeciesInteractionSamplers.adjacency-Tuple{Metaweb{&lt;:Global}}"><code>SpeciesInteractionSamplers.adjacency</code></a></li><li><a href="#SpeciesInteractionSamplers.detect!-Union{Tuple{SC}, Tuple{Metaweb{SC}, Metaweb{&lt;:Global}}} where SC"><code>SpeciesInteractionSamplers.detect!</code></a></li><li><a href="#SpeciesInteractionSamplers.detectability-Union{Tuple{RA}, Tuple{RelativeAbundanceScaled, Metaweb{&lt;:Global}, RA}} where RA&lt;:(Abundance{RelativeAbundance})"><code>SpeciesInteractionSamplers.detectability</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Tuple{StochasticBlockModel}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Union{Tuple{NicheModel{I, F}}, Tuple{F}, Tuple{I}} where {I, F}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.generate-Tuple{AutocorrelatedRange}"><code>SpeciesInteractionSamplers.generate</code></a></li><li><a href="#SpeciesInteractionSamplers.mirror-Tuple{SpeciesInteractionNetworks.SpeciesInteractionNetwork}"><code>SpeciesInteractionSamplers.mirror</code></a></li><li><a href="#SpeciesInteractionSamplers.networks-Tuple{Metaweb}"><code>SpeciesInteractionSamplers.networks</code></a></li><li><a href="#SpeciesInteractionSamplers.numspecies-Tuple{M} where M&lt;:Metaweb"><code>SpeciesInteractionSamplers.numspecies</code></a></li><li><a href="#SpeciesInteractionSamplers.numspecies-Tuple{SpeciesPool}"><code>SpeciesInteractionSamplers.numspecies</code></a></li><li><a href="#SpeciesInteractionSamplers.occurrence-Tuple{Range}"><code>SpeciesInteractionSamplers.occurrence</code></a></li><li><a href="#SpeciesInteractionSamplers.possible-Union{Tuple{P}, Tuple{R}, Tuple{G}, Tuple{Metaweb{G}, Occurrence{P}, Occurrence{R}}} where {G, R&lt;:Range, P&lt;:Phenology}"><code>SpeciesInteractionSamplers.possible</code></a></li><li><a href="#SpeciesInteractionSamplers.realizable!-Union{Tuple{RA}, Tuple{M}, Tuple{NeutrallyForbiddenLinks, M, RA}} where {M&lt;:Metaweb, RA&lt;:(Abundance{RelativeAbundance})}"><code>SpeciesInteractionSamplers.realizable!</code></a></li><li><a href="#SpeciesInteractionSamplers.richness-Tuple{M} where M&lt;:Metaweb"><code>SpeciesInteractionSamplers.richness</code></a></li><li><a href="#SpeciesInteractionSamplers.scale-Tuple{Metaweb}"><code>SpeciesInteractionSamplers.scale</code></a></li><li><a href="#SpeciesInteractionSamplers.species-Tuple{M} where M&lt;:Metaweb"><code>SpeciesInteractionSamplers.species</code></a></li></ul><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2>',4)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"SpeciesInteractionSamplers.Abundance",href:"#SpeciesInteractionSamplers.Abundance"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Abundance")],-1)),e[1]||(e[1]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Abundance{A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbundanceTrait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,S,T}</span></span></code></pre></div><p>A distribution of the abundance values of each species in a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[2]||(e[2]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/abundance.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",b,[s("summary",null,[e[4]||(e[4]=s("a",{id:"SpeciesInteractionSamplers.AbundanceGenerator",href:"#SpeciesInteractionSamplers.AbundanceGenerator"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.AbundanceGenerator")],-1)),e[5]||(e[5]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[7]||(e[7]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbundanceGenerator</span></span></code></pre></div><p>A supertype for all method used to generate <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Abundance"><code>Abundance</code></a> distributions across a set of species in a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a></p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[6]||(e[6]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L21-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",S,[s("summary",null,[e[8]||(e[8]=s("a",{id:"SpeciesInteractionSamplers.AutocorrelatedRange",href:"#SpeciesInteractionSamplers.AutocorrelatedRange"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.AutocorrelatedRange")],-1)),e[9]||(e[9]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[11]||(e[11]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AutocorrelatedRange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RangeGenerator</span></span></code></pre></div><p>A <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.RangeGenerator"><code>RangeGenerator</code></a> that uses NeutralLandscapes.jl&#39;s <code>DiamondSquare</code> landscape generator to create autocorrelated rasters with autocorrelatation parameter ranging between 0 and 1, where increasing values mean increasing autocorrelated. The autocorrelated raster is thresholded where all values in the raster above the <code>threshold</code> are present, and all values below are absent. The value of <code>threshold</code> is either provided as a scalar, or drawn from a distribution.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[10]||(e[10]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/range.jl#L35-L39",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",u,[s("summary",null,[e[12]||(e[12]=s("a",{id:"SpeciesInteractionSamplers.Detectable",href:"#SpeciesInteractionSamplers.Detectable"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Detectable")],-1)),e[13]||(e[13]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[15]||(e[15]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Detectable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <code>Detectable</code> network represents the probability that any <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> interaction will successfully be detected if it occurs in the presence of an observed.</p><p><code>Detectable</code> networks are created using the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.detectability-Union{Tuple{RA}, Tuple{RelativeAbundanceScaled, Metaweb{&lt;:Global}, RA}} where RA&lt;:(Abundance{RelativeAbundance})"><code>detectability</code></a> method called on a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> and a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.DetectionModel"><code>DetectionModel</code></a></p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[14]||(e[14]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L99-L105",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",k,[s("summary",null,[e[16]||(e[16]=s("a",{id:"SpeciesInteractionSamplers.Detected",href:"#SpeciesInteractionSamplers.Detected"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Detected")],-1)),e[17]||(e[17]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[19]||(e[19]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Detected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <code>Detected</code> network represents the discrete number of detected interactions between each pair of species at each place/time.</p><p><code>Detected</code> networks are created using the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.detect!-Union{Tuple{SC}, Tuple{Metaweb{SC}, Metaweb{&lt;:Global}}} where SC"><code>detect!</code></a> method called on a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realized"><code>Realized</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> and a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Detectable"><code>Detectable</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a></p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[18]||(e[18]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L108-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",g,[s("summary",null,[e[20]||(e[20]=s("a",{id:"SpeciesInteractionSamplers.DetectionModel",href:"#SpeciesInteractionSamplers.DetectionModel"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.DetectionModel")],-1)),e[21]||(e[21]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[23]||(e[23]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DetectionModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Supertype for all models that describe how likely each <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> interaction is to be detected in the presence of an observer.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[22]||(e[22]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L162-L166",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",m,[s("summary",null,[e[24]||(e[24]=s("a",{id:"SpeciesInteractionSamplers.Feasible",href:"#SpeciesInteractionSamplers.Feasible"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Feasible")],-1)),e[25]||(e[25]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[27]||(e[27]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Feasible </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> is <code>Feasible</code> if it represents all interactions that are biologically capable of happening between pairs of species.</p><p>Note that this does not mean that the interaction has ever been realized–-for example, many interactions that are feasible may not have occurred in the present or past as the constituent species may never have co-occurred, but may become realizable in the future as species <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Range"><code>Range</code></a>s and <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Phenology"><code>Phenology</code></a>s change.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[26]||(e[26]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L66-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",y,[s("summary",null,[e[28]||(e[28]=s("a",{id:"SpeciesInteractionSamplers.GenerationModel",href:"#SpeciesInteractionSamplers.GenerationModel"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.GenerationModel")],-1)),e[29]||(e[29]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[31]||(e[31]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GenerationModel</span></span></code></pre></div><p>Abstract type that is the supertype for any object passed to the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.generate-Tuple{AutocorrelatedRange}"><code>generate</code></a> method.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[30]||(e[30]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",f,[s("summary",null,[e[32]||(e[32]=s("a",{id:"SpeciesInteractionSamplers.Global",href:"#SpeciesInteractionSamplers.Global"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Global")],-1)),e[33]||(e[33]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[35]||(e[35]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Global{SIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesInteractionNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Scale</span></span></code></pre></div><p>A <code>Global</code> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Scale"><code>Scale</code></a> contains a single <code>SpeciesInteractionNetwork</code> that is aggregated across space and time, i.e. a metaweb.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[34]||(e[34]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/scale.jl#L5-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",I,[s("summary",null,[e[36]||(e[36]=s("a",{id:"SpeciesInteractionSamplers.Metaweb",href:"#SpeciesInteractionSamplers.Metaweb"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Metaweb")],-1)),e[37]||(e[37]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[39]||(e[39]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Metaweb{SC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,SP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesPool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A <code>Metaweb</code> represents a set of species and their interactions aggregated across space and/or time.</p><p>A Metaweb is composed of a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a> and a set of interactions defined at a given <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Scale"><code>Scale</code></a>.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[38]||(e[38]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L1-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",j,[s("summary",null,[e[40]||(e[40]=s("a",{id:"SpeciesInteractionSamplers.MetawebGenerator",href:"#SpeciesInteractionSamplers.MetawebGenerator"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.MetawebGenerator")],-1)),e[41]||(e[41]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[43]||(e[43]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MetawebGenerator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GenerationModel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A supertype for all methods used to generate <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a>s.</p><p>Currently, the concrete instances of <code>MetawebGenerator</code> are</p><ul><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.StochasticBlockModel"><code>StochasticBlockModel</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.NicheModel"><code>NicheModel</code></a></p></li></ul>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[42]||(e[42]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L8-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",T,[s("summary",null,[e[44]||(e[44]=s("a",{id:"SpeciesInteractionSamplers.NicheModel",href:"#SpeciesInteractionSamplers.NicheModel"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.NicheModel")],-1)),e[45]||(e[45]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[47]||(e[47]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NicheModel</span></span></code></pre></div><p>A <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.MetawebGenerator"><code>MetawebGenerator</code></a> that generates a food-web for a fixed number of <code>species</code> and an expected value of <code>connectance</code> (the proportion of possible edges that are feasible in the Metaweb). Proposed in @Williams2000SimRul.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[46]||(e[46]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L159-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",_,[s("summary",null,[e[48]||(e[48]=s("a",{id:"SpeciesInteractionSamplers.Phenology",href:"#SpeciesInteractionSamplers.Phenology"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Phenology")],-1)),e[49]||(e[49]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[51]||(e[51]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Phenology</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[50]||(e[50]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/phenology.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",E,[s("summary",null,[e[52]||(e[52]=s("a",{id:"SpeciesInteractionSamplers.PhenologyGenerator",href:"#SpeciesInteractionSamplers.PhenologyGenerator"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.PhenologyGenerator")],-1)),e[53]||(e[53]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[55]||(e[55]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PhenologyGenerator</span></span></code></pre></div><p>A supertype for all methods used to generate <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Phenology"><code>Phenology</code></a>s.</p><p>Currently, the concrete instances of PhenologyGenerator are:</p><ul><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.UniformPhenology"><code>UniformPhenology</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.PoissonPhenology"><code>PoissonPhenology</code></a></p></li></ul>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[54]||(e[54]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L28-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",v,[s("summary",null,[e[56]||(e[56]=s("a",{id:"SpeciesInteractionSamplers.PoissonPhenology",href:"#SpeciesInteractionSamplers.PoissonPhenology"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.PoissonPhenology")],-1)),e[57]||(e[57]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[59]||(e[59]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PoissonPhenology</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[58]||(e[58]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/phenology.jl#L60-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",A,[s("summary",null,[e[60]||(e[60]=s("a",{id:"SpeciesInteractionSamplers.Possible",href:"#SpeciesInteractionSamplers.Possible"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Possible")],-1)),e[61]||(e[61]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[63]||(e[63]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Possible </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <code>Possible</code> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> represents interactions between species that can both (a) feasibly interact and (b) co-occur at a given place/time.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[62]||(e[62]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L75-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",C,[s("summary",null,[e[64]||(e[64]=s("a",{id:"SpeciesInteractionSamplers.Range",href:"#SpeciesInteractionSamplers.Range"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Range")],-1)),e[65]||(e[65]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[67]||(e[67]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Range{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A <code>Range</code> represents the binary occurrence of species across space using a raster.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[66]||(e[66]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/range.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",F,[s("summary",null,[e[68]||(e[68]=s("a",{id:"SpeciesInteractionSamplers.RangeGenerator",href:"#SpeciesInteractionSamplers.RangeGenerator"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.RangeGenerator")],-1)),e[69]||(e[69]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[71]||(e[71]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RangeGenerator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A supertype for all methods used to generate <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Range"><code>Range</code></a>s.</p><p>Currently, the concrete instances of <code>RangeGenerator</code> are:</p><ul><li><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.AutocorrelatedRange"><code>AutocorrelatedRange</code></a></li></ul>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[70]||(e[70]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L40-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",M,[s("summary",null,[e[72]||(e[72]=s("a",{id:"SpeciesInteractionSamplers.Realizable",href:"#SpeciesInteractionSamplers.Realizable"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Realizable")],-1)),e[73]||(e[73]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[75]||(e[75]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Realizable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <code>Realizable</code> network represents the possible interactions in a network, but is distinct from <code>Possible</code> networks because it contains the <em>rate of realization</em> for each interaction.</p><p>Realizable networks are created using the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.realizable!-Union{Tuple{RA}, Tuple{M}, Tuple{NeutrallyForbiddenLinks, M, RA}} where {M&lt;:Metaweb, RA&lt;:(Abundance{RelativeAbundance})}"><code>realizable!</code></a> method called on a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Possible"><code>Possible</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> and a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.RealizationModel"><code>RealizationModel</code></a>.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[74]||(e[74]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L83-L89",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",w,[s("summary",null,[e[76]||(e[76]=s("a",{id:"SpeciesInteractionSamplers.RealizationModel",href:"#SpeciesInteractionSamplers.RealizationModel"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.RealizationModel")],-1)),e[77]||(e[77]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[79]||(e[79]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RealizationModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Supertype for all models that describe how a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> goes from <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Possible"><code>Possible</code></a> to <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realizable"><code>Realizable</code></a></p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[78]||(e[78]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L155-L159",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",P,[s("summary",null,[e[80]||(e[80]=s("a",{id:"SpeciesInteractionSamplers.Realized",href:"#SpeciesInteractionSamplers.Realized"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Realized")],-1)),e[81]||(e[81]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[83]||(e[83]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Realized </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A <code>Realized</code> network describes a discrete number of actually realized interactions from a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realizable"><code>Realizable</code></a> network.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[82]||(e[82]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L92-L96",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",R,[s("summary",null,[e[84]||(e[84]=s("a",{id:"SpeciesInteractionSamplers.RelativeAbundance",href:"#SpeciesInteractionSamplers.RelativeAbundance"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.RelativeAbundance")],-1)),e[85]||(e[85]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[87]||(e[87]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RelativeAbundance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Reprsents species abundances as a vector <code>x</code> where each element represents the proportional species abundance. Note that <code>sum(x)</code> must equal <code>1</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[86]||(e[86]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L144-L148",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",x,[s("summary",null,[e[88]||(e[88]=s("a",{id:"SpeciesInteractionSamplers.RelativeAbundanceScaled",href:"#SpeciesInteractionSamplers.RelativeAbundanceScaled"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.RelativeAbundanceScaled")],-1)),e[89]||(e[89]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[91]||(e[91]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RelativeAbundanceScaled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DetectionModel</span></span></code></pre></div><p>Model for generation detection probability where the probability of detecting an interaction between species <code>i</code> and species <code>j</code> is a product of the detection probabilities for each species, treated as independent of one-another.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[90]||(e[90]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/detect.jl#L1-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",D,[s("summary",null,[e[92]||(e[92]=s("a",{id:"SpeciesInteractionSamplers.Scale",href:"#SpeciesInteractionSamplers.Scale"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Scale")],-1)),e[93]||(e[93]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[95]||(e[95]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Abstract supertype for the different spatial/temporal scales at which a network can be described.</p><p>Possible subtypes are:</p><ul><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Global"><code>Global</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Spatial"><code>Spatial</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Temporal"><code>Temporal</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Spatiotemporal"><code>Spatiotemporal</code></a></p></li></ul>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[94]||(e[94]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L117-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",L,[s("summary",null,[e[96]||(e[96]=s("a",{id:"SpeciesInteractionSamplers.Spatial",href:"#SpeciesInteractionSamplers.Spatial"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Spatial")],-1)),e[97]||(e[97]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[99]||(e[99]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Spatial{SIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesInteractionNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Scale</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[98]||(e[98]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/scale.jl#L31-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",V,[s("summary",null,[e[100]||(e[100]=s("a",{id:"SpeciesInteractionSamplers.Spatiotemporal",href:"#SpeciesInteractionSamplers.Spatiotemporal"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Spatiotemporal")],-1)),e[101]||(e[101]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[103]||(e[103]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Spatiotemporal{SIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesInteractionNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Scale</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[102]||(e[102]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/scale.jl#L45-L47",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",N,[s("summary",null,[e[104]||(e[104]=s("a",{id:"SpeciesInteractionSamplers.SpeciesPool",href:"#SpeciesInteractionSamplers.SpeciesPool"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.SpeciesPool")],-1)),e[105]||(e[105]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[107]||(e[107]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpeciesPool{S}</span></span></code></pre></div><p>A <code>SpeciesPool</code> represents a set of species, each identified with either a <code>Symbol</code> or <code>String</code> in a vector called <code>names</code>. Note that the order of species in <code>names</code> is assumed to be fixed, so the index of each species in <code>names</code> can be used an an integer identifier.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[106]||(e[106]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/species.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",B,[s("summary",null,[e[108]||(e[108]=s("a",{id:"SpeciesInteractionSamplers.State",href:"#SpeciesInteractionSamplers.State"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.State")],-1)),e[109]||(e[109]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[111]||(e[111]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>An supertype for all possible forms a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> can take. The set of subtypes for state are:</p><ul><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Possible"><code>Possible</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realizable"><code>Realizable</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realized"><code>Realized</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Detectable"><code>Detectable</code></a></p></li><li><p><a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Detected"><code>Detected</code></a></p></li></ul>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[110]||(e[110]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/types.jl#L52-L63",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",G,[s("summary",null,[e[112]||(e[112]=s("a",{id:"SpeciesInteractionSamplers.StochasticBlockModel",href:"#SpeciesInteractionSamplers.StochasticBlockModel"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.StochasticBlockModel")],-1)),e[113]||(e[113]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[115]||(e[115]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StochasticBlockModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MetawebGenerator</span></span></code></pre></div><p>A <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.MetawebGenerator"><code>MetawebGenerator</code></a> that generates a Metaweb based on assigning each node a group <code>node_ids</code>, and a matrix <code>mixing_matrix</code> which at each index <code>mixing_matrix[i,j]</code> describes the probability that an edge exists between a node in group <code>i</code> and a node in group <code>j</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[114]||(e[114]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L187-L191",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",O,[s("summary",null,[e[116]||(e[116]=s("a",{id:"SpeciesInteractionSamplers.StochasticBlockModel-Tuple{}",href:"#SpeciesInteractionSamplers.StochasticBlockModel-Tuple{}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.StochasticBlockModel")],-1)),e[117]||(e[117]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[119]||(e[119]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StochasticBlockModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; numspecies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpeciesInteractionSamplers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_DEFAULT_SPECIES_RICHNESS, numgroups</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructor for a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.StochasticBlockModel"><code>StochasticBlockModel</code></a> based on a set number of species and number of groups, where the mixing probabilities between groups <code>i</code> and <code>j</code> are drawn from <code>mixing_dist</code></p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[118]||(e[118]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L200-L204",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",z,[s("summary",null,[e[120]||(e[120]=s("a",{id:"SpeciesInteractionSamplers.Temporal",href:"#SpeciesInteractionSamplers.Temporal"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.Temporal")],-1)),e[121]||(e[121]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[123]||(e[123]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Temporal{SIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesInteractionNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Scale</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[122]||(e[122]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/scale.jl#L17-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",U,[s("summary",null,[e[124]||(e[124]=s("a",{id:"SpeciesInteractionSamplers.UniformPhenology",href:"#SpeciesInteractionSamplers.UniformPhenology"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.UniformPhenology")],-1)),e[125]||(e[125]=l()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[127]||(e[127]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UniformPhenology</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[126]||(e[126]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/phenology.jl#L41-L43",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",q,[s("summary",null,[e[128]||(e[128]=s("a",{id:"SpeciesInteractionSamplers.adjacency-Tuple{Metaweb{<:Global}}",href:"#SpeciesInteractionSamplers.adjacency-Tuple{Metaweb{<:Global}}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.adjacency")],-1)),e[129]||(e[129]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[131]||(e[131]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjacency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the adjacency network(s) associated with a Metaweb <code>net</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[130]||(e[130]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L35-L39",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",$,[s("summary",null,[e[132]||(e[132]=s("a",{id:"SpeciesInteractionSamplers.detect!-Union{Tuple{SC}, Tuple{Metaweb{SC}, Metaweb{<:Global}}} where SC",href:"#SpeciesInteractionSamplers.detect!-Union{Tuple{SC}, Tuple{Metaweb{SC}, Metaweb{<:Global}}} where SC"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.detect!")],-1)),e[133]||(e[133]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[135]||(e[135]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">detect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb{Realized,SC}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, detection_prob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb{Detectable,&lt;:Global}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a detected network based on a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Realized"><code>Realized</code></a> network and a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Detectable"><code>Detectable</code></a> network representing detection probabilities for each interaction.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[134]||(e[134]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/detect.jl#L58-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",W,[s("summary",null,[e[136]||(e[136]=s("a",{id:"SpeciesInteractionSamplers.detectability-Union{Tuple{RA}, Tuple{RelativeAbundanceScaled, Metaweb{<:Global}, RA}} where RA<:Abundance{RelativeAbundance}",href:"#SpeciesInteractionSamplers.detectability-Union{Tuple{RA}, Tuple{RelativeAbundanceScaled, Metaweb{<:Global}, RA}} where RA<:Abundance{RelativeAbundance}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.detectability")],-1)),e[137]||(e[137]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[139]||(e[139]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">detectability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb{Feasible,&lt;:Global}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, detection_model)</span></span></code></pre></div><p>Returns a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Detectable"><code>Detectable</code></a> network representing the probability and <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> interaction is successfully detected in presence of an observer.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[138]||(e[138]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/detect.jl#L30-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",H,[s("summary",null,[e[140]||(e[140]=s("a",{id:"SpeciesInteractionSamplers.generate-Tuple{AutocorrelatedRange}",href:"#SpeciesInteractionSamplers.generate-Tuple{AutocorrelatedRange}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.generate")],-1)),e[141]||(e[141]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[143]||(e[143]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AutocorrelatedRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Range"><code>Range</code></a> using the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.AutocorrelatedRange"><code>AutocorrelatedRange</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.RangeGenerator"><code>RangeGenerator</code></a>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[142]||(e[142]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/range.jl#L46-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",J,[s("summary",null,[e[144]||(e[144]=s("a",{id:"SpeciesInteractionSamplers.generate-Tuple{StochasticBlockModel}",href:"#SpeciesInteractionSamplers.generate-Tuple{StochasticBlockModel}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.generate")],-1)),e[145]||(e[145]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[147]||(e[147]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sbm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StochasticBlockModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Method for generating a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> using a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.StochasticBlockModel"><code>StochasticBlockModel</code></a> generator.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[146]||(e[146]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L211-L215",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",K,[s("summary",null,[e[148]||(e[148]=s("a",{id:"SpeciesInteractionSamplers.generate-Union{Tuple{NicheModel{I, F}}, Tuple{F}, Tuple{I}} where {I, F}",href:"#SpeciesInteractionSamplers.generate-Union{Tuple{NicheModel{I, F}}, Tuple{F}, Tuple{I}} where {I, F}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.generate")],-1)),e[149]||(e[149]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[151]||(e[151]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NicheModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Feasible"><code>Feasible</code></a> <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> using the niche model for food-web generation from Williams-Martinez (2000).</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[150]||(e[150]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L169-L173",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Q,[s("summary",null,[e[152]||(e[152]=s("a",{id:"SpeciesInteractionSamplers.mirror-Tuple{SpeciesInteractionNetworks.SpeciesInteractionNetwork}",href:"#SpeciesInteractionSamplers.mirror-Tuple{SpeciesInteractionNetworks.SpeciesInteractionNetwork}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.mirror")],-1)),e[153]||(e[153]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[155]||(e[155]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesInteractionNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a symmetric (i.e. undirected) version of the input <code>SpeciesInteractionNetwork</code> with no self loops (i.e. diagonal of the adjacency matrix is 0)</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[154]||(e[154]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L243-L248",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",X,[s("summary",null,[e[156]||(e[156]=s("a",{id:"SpeciesInteractionSamplers.numspecies-Tuple{M} where M<:Metaweb",href:"#SpeciesInteractionSamplers.numspecies-Tuple{M} where M<:Metaweb"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.numspecies")],-1)),e[157]||(e[157]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[159]||(e[159]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">numspecies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the number of species in a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> <code>mw</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[158]||(e[158]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L64-L68",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Y,[s("summary",null,[e[160]||(e[160]=s("a",{id:"SpeciesInteractionSamplers.numspecies-Tuple{SpeciesPool}",href:"#SpeciesInteractionSamplers.numspecies-Tuple{SpeciesPool}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.numspecies")],-1)),e[161]||(e[161]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[163]||(e[163]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">numspecies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpeciesPool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the number of species in input <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a> <code>sp</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[162]||(e[162]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/species.jl#L14-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Z,[s("summary",null,[e[164]||(e[164]=s("a",{id:"SpeciesInteractionSamplers.occurrence-Tuple{Range}",href:"#SpeciesInteractionSamplers.occurrence-Tuple{Range}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.occurrence")],-1)),e[165]||(e[165]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[167]||(e[167]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">occurrence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the occurrence raster associated with a <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Range"><code>Range</code></a></p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[166]||(e[166]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/range.jl#L10-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",ee,[s("summary",null,[e[168]||(e[168]=s("a",{id:"SpeciesInteractionSamplers.possible-Union{Tuple{P}, Tuple{R}, Tuple{G}, Tuple{Metaweb{G}, Occurrence{P}, Occurrence{R}}} where {G, R<:Range, P<:Phenology}",href:"#SpeciesInteractionSamplers.possible-Union{Tuple{P}, Tuple{R}, Tuple{G}, Tuple{Metaweb{G}, Occurrence{P}, Occurrence{R}}} where {G, R<:Range, P<:Phenology}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.possible")],-1)),e[169]||(e[169]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[171]||(e[171]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">possible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb{G}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, phenologies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Occurrence{P}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ranges</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Occurrence{R}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Alternative method for <code>possible</code> with <code>Pheonology</code> and <code>Range</code> arguments flipped from the typical method.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[170]||(e[170]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/possible.jl#L51-L56",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",se,[s("summary",null,[e[172]||(e[172]=s("a",{id:"SpeciesInteractionSamplers.realizable!-Union{Tuple{RA}, Tuple{M}, Tuple{NeutrallyForbiddenLinks, M, RA}} where {M<:Metaweb, RA<:Abundance{RelativeAbundance}}",href:"#SpeciesInteractionSamplers.realizable!-Union{Tuple{RA}, Tuple{M}, Tuple{NeutrallyForbiddenLinks, M, RA}} where {M<:Metaweb, RA<:Abundance{RelativeAbundance}}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.realizable!")],-1)),e[173]||(e[173]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[175]||(e[175]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">realizable!</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[174]||(e[174]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/realizable.jl#L31-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",ae,[s("summary",null,[e[176]||(e[176]=s("a",{id:"SpeciesInteractionSamplers.richness-Tuple{M} where M<:Metaweb",href:"#SpeciesInteractionSamplers.richness-Tuple{M} where M<:Metaweb"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.richness")],-1)),e[177]||(e[177]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[179]||(e[179]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">richness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the number of species in the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a> associated with the input <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> <code>mw</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[178]||(e[178]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L50-L54",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",te,[s("summary",null,[e[180]||(e[180]=s("a",{id:"SpeciesInteractionSamplers.scale-Tuple{Metaweb}",href:"#SpeciesInteractionSamplers.scale-Tuple{Metaweb}"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.scale")],-1)),e[181]||(e[181]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[183]||(e[183]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the input metaweb <code>mw</code> partitioned at the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Scale"><code>Scale</code></a> it is defined at.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[182]||(e[182]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L28-L32",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",ie,[s("summary",null,[e[184]||(e[184]=s("a",{id:"SpeciesInteractionSamplers.species-Tuple{M} where M<:Metaweb",href:"#SpeciesInteractionSamplers.species-Tuple{M} where M<:Metaweb"},[s("span",{class:"jlbinding"},"SpeciesInteractionSamplers.species")],-1)),e[185]||(e[185]=l()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[187]||(e[187]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">species</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Metaweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.SpeciesPool"><code>SpeciesPool</code></a> that belongs to the input <a href="/SpeciesInteractionSamplers.jl/dev/reference/public#SpeciesInteractionSamplers.Metaweb"><code>Metaweb</code></a> <code>mw</code>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[186]||(e[186]=[s("a",{href:"https://github.com/gottacatchenall/SpeciesInteractionSamplers.jl/blob/3866b7b48833e27e326a6847d0f4bc32931ef530/src/network.jl#L57-L61",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const be=r(d,[["render",le]]);export{he as __pageData,be as default};
